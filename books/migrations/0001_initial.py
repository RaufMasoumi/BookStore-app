# Generated by Django 4.0.3 on 2022-06-27 05:09

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=250)),
                ('author', models.CharField(max_length=250)),
                ('price', models.DecimalField(decimal_places=2, max_digits=6)),
                ('off', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('sale', models.BooleanField(blank=True, default=False, verbose_name='Set as a sale book?(will show in sale products)')),
                ('bestseller', models.BooleanField(blank=True, default=False, verbose_name='Set as a bestseller book?(will show in bestseller products)')),
                ('mostpopular', models.BooleanField(blank=True, default=False, verbose_name='Set as a mostpopular book?(will show in mostpopular products)')),
                ('new', models.BooleanField(blank=True, default=False, verbose_name='Set as a newarrival book?(will show in newarrival products)')),
                ('cover', models.ImageField(blank=True, default='books/covers/unknownbook.png', max_length=300, upload_to='books/covers/')),
                ('pages', models.PositiveIntegerField(blank=True, default=0)),
                ('subject', models.CharField(blank=True, max_length=50, null=True)),
                ('rating', models.FloatField(blank=True, default=0)),
                ('publisher', models.CharField(blank=True, max_length=200, null=True)),
                ('age_range', models.CharField(blank=True, max_length=100, null=True)),
                ('grade_range', models.CharField(blank=True, max_length=100, null=True)),
                ('page_size', models.CharField(blank=True, max_length=10, null=True, verbose_name='page size(like A4)')),
                ('length', models.FloatField(blank=True, null=True, verbose_name='length(cm)')),
                ('width', models.FloatField(blank=True, null=True, verbose_name='width(cm)')),
                ('summary', models.TextField(blank=True, null=True)),
                ('time_to_sell', models.DateTimeField(auto_now_add=True)),
                ('stock', models.PositiveIntegerField(blank=True, default=0)),
                ('buys', models.PositiveIntegerField(blank=True, default=0)),
                ('views', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('status', models.CharField(blank=True, choices=[('p', 'Published'), ('d', 'Draft')], default='p', max_length=2)),
            ],
            options={
                'ordering': ['-time_to_sell', 'stock'],
                'permissions': [('special_status', 'Can read all books')],
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default='guest', max_length=50)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('review', models.TextField(max_length=250)),
                ('rating', models.FloatField(blank=True, default=0)),
                ('submitted', models.DateTimeField(auto_now_add=True)),
                ('votes', models.IntegerField(blank=True, default=0)),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='books.book')),
            ],
            options={
                'ordering': ['votes', '-submitted'],
            },
        ),
        migrations.CreateModel(
            name='ReviewReply',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default='guest', max_length=50)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('reply', models.CharField(max_length=250)),
                ('replied', models.DateTimeField(auto_now_add=True)),
                ('votes', models.IntegerField(default=0)),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('review', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='books.review')),
                ('to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='books.reviewreply')),
            ],
            options={
                'verbose_name_plural': 'Review Replies',
                'ordering': ['votes', '-replied'],
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('thumbnail', models.ImageField(blank=True, max_length=300, upload_to='categories')),
                ('status', models.BooleanField(default=True, verbose_name='To be displayed?')),
                ('position', models.IntegerField()),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='children', to='books.category')),
            ],
            options={
                'verbose_name_plural': 'Categories',
                'ordering': ['parent_id', 'position'],
                'permissions': [('category_list', 'Can see category list')],
            },
        ),
        migrations.CreateModel(
            name='BookImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, max_length=300, upload_to='books/images/')),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='books.book')),
            ],
        ),
        migrations.AddField(
            model_name='book',
            name='category',
            field=models.ManyToManyField(blank=True, related_name='books', to='books.category'),
        ),
        migrations.AddIndex(
            model_name='book',
            index=models.Index(fields=['id'], name='id_index'),
        ),
    ]
